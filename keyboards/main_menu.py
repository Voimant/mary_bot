from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
import pandas as pd

from DB.db_func import db_cats_list, db_sub_cats_list

main_menu_button = [
    [InlineKeyboardButton(text='üë©üèΩ‚Äçüíª –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é', callback_data='record')],
    [InlineKeyboardButton(text='‚öñÔ∏è –ú–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –æ–ø—ã—Ç', callback_data='button_2')],
    [InlineKeyboardButton(text='üéñ –û—Ç–∑—ã–≤—ã –î–æ–≤–µ—Ä–∏—Ç–µ–ª–µ–π', callback_data='button_3')],
    [InlineKeyboardButton(text='üíÅüèΩ‚Äç‚ôÄÔ∏è –°–æ–≤–µ—Ç—ã –æ—Ç —é—Ä–∏—Å—Ç–∞', callback_data='mary_sovets')],
    [InlineKeyboardButton(text='‚ÅâÔ∏è –ó–∞–¥–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–π –≤–æ–ø—Ä–æ—Å —é—Ä–∏—Å—Ç—É', url='https://t.me/+Ds1Aiq4m0hg2NzFi')],
    [InlineKeyboardButton(text='üì≤ –ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contacts')],
    # [InlineKeyboardButton(text='üì≤ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ç—Ä–∞–≥–µ–Ω—Ç–∞', callback_data='go_ddata')]
]

main_markup = InlineKeyboardMarkup(inline_keyboard=main_menu_button)


# specialization_button = [
#     [InlineKeyboardButton(text='–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ', callback_data='family'),
#     InlineKeyboardButton(text='–°—É–¥–µ–±–Ω—ã–µ —Å–ø–æ—Ä—ã', callback_data='dispute')],
#     [InlineKeyboardButton(text='–ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ', callback_data='bankrupt'),
#     InlineKeyboardButton(text='–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –ø—Ä–∞–≤–æ', callback_data='intel')],
#     [InlineKeyboardButton(text='–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ', callback_data='corp'),
#     InlineKeyboardButton(text='–õ–∏–∫–≤–∏–¥–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å–∞', callback_data='licvid')],
#     [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cancel')]

# ]
# spec_markup = InlineKeyboardMarkup(inline_keyboard=specialization_button)


def spec_markup():
    list_cats = db_cats_list()
    builder = InlineKeyboardBuilder()
    for cat in list_cats:
        builder.button(text=cat, callback_data=cat)
    builder.button(text='–ù–∞–∑–∞–¥', callback_data='cancel')
    builder.adjust(1)
    return builder.as_markup()


def sub_cats_markup(cat):
    sub_cats_list = db_sub_cats_list(cat)
    builder = InlineKeyboardBuilder()
    for cat in sub_cats_list:
        builder.button(text=cat, callback_data=cat)
    builder.button(text='–ù–∞–∑–∞–¥', callback_data='cancel')
    builder.adjust(1)
    return builder.as_markup()


def sub_bank_markup(cat):
    sub_cats_list = db_sub_cats_list(cat)
    builder = InlineKeyboardBuilder()
    for cat in sub_cats_list:
        builder.button(text=cat, callback_data=cat)
    builder.button(text='–ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü', url='https://t.me/bankrot_naminimalkah')
    builder.button(text='–ù–∞–∑–∞–¥', callback_data='cancel')
    builder.adjust(1)
    return builder.as_markup()


cancel_button = [[InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='cancel')]]
cancel_markup = InlineKeyboardMarkup(inline_keyboard=cancel_button)

contacts_button = [
    [InlineKeyboardButton(text='üåê VK', url='https://vk.com/the_lawyer_isa_maniac')],
    [InlineKeyboardButton(text='üì∑ instagram', url='https://instagram.com/platunova.mara?igshid=OGQ5ZDc2ODk2ZA==')],
    [InlineKeyboardButton(text='–¢–ì –∫–∞–Ω–∞–ª –ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ –Ω–∞ –º–∏–Ω–∏–º–∞–ª–∫–∞—Ö', url='https://t.me/bankrot_naminimalkah')],
    [InlineKeyboardButton(text='–¢–ì –∫–∞–Ω–∞–ª –ú–æ–∑–≥ –¥–ª—è –ø—Ä–∞–≤–æ–æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π', url='https://t.me/+SLUgWFJB8wZWRUn2')],
    [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='cancel')]
]
contacts_markup = InlineKeyboardMarkup(inline_keyboard=contacts_button)


# def dela_mark(path_exl):
#     builder = InlineKeyboardBuilder()
#     df = pd.read_excel(path_exl)
#     dela = df.to_dict()
#     count = 0
#     for dict_1 in dela:
#         dela['–ù–æ–º–µ—Ä –¥–µ–ª–∞'][count]
#         builder.row(InlineKeyboardButton(text=str(key), callback_data=str(key)))
#     builder.row(InlineKeyboardButton(text=str('–ù–∞–∑–∞–¥'), callback_data='cancel'))
#     builder.adjust(1)
#     return builder


# for k,v in dela().items():
#     print(k + " ", v)